{{ 'style.css' | asset_url | stylesheet_tag }}

{% schema %}
{
  "name": "Sticky Cart Bar",
  "target": "section"
}
{% endschema %}

{% comment %} <div id="sticky" class="scrollToTopBtn"> {% endcomment %}
  <div id="bar">
    <img class="svimg" width="150px" height="50px" src="https://cdn.shopify.com/s/files/1/0737/1295/9775/files/radicallogo.png?v=1710935056"/>
    <div>
      <h2 id="producttitle"></h2>
    </div>
    <div class="proquantity">
    <div> 
      <h2 style="margin-top: 14px" id="qtytext">Quantity</h2>
      </div>
      <div>
      <input 
      class="numberstyle"
      type="number" 
      id="quantity"
      value="1" 
      min="1" 
      max="{{ product.variants[0].inventory_quantity }}" 
      onchange="updateQuantity(this.value);">

      <h2 id="quantity"></h2>
    </div>
    </div>
    <div class="proprice">
      <div>
     <h2 id="pricetext">Price&nbsp;</h2>
      </div>
      <div>
      <h2 id="Price" style="font-weight: 600;" ></h2>
      </div>
    </div>
    <div id="cart_btn">
      <button class="cartbtn" type="submit" onclick="cartChange()">Add to cart</button>
    </div>
    
  </div>
{% comment %} </div> {% endcomment %}
<script>
  function updateQuantity(value) {
    console.log(value); 
  }
  async function cartChange() {
  const productId = {{ product.variants[0].id }}; 
  var quantityInput = document.getElementById("quantity");
  var quantityValue = quantityInput.value; 
  const data = {
    items: [
        {
          id: productId,
          quantity: quantityValue
        }
      ]
    };
    
    const response = await fetch("/cart/add.js", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      body: JSON.stringify(data)
    });

    const myJson = await response.json(); 
    console.log(myJson);
    if(response.ok)
    {
      window.location.href = "/cart";
    }
    else
    {
      alert("Product not added to cart");
    }
  }
  
  document.addEventListener('DOMContentLoaded', async() => {
    const producttitle = document.getElementById('producttitle');
    const quantity = document.getElementById('quantity');
    const Price = document.getElementById('Price');
    producttitle.innerText = "{{ product.title }}";
    quantity.innerText = "{{ product.variants[0].inventory_quantity }}";  
    Price.innerText = "{{ product.price | money_with_currency }}";
    
    var scrollToTopBtn = document.querySelector(".scrollToTopBtn");
    var rootElement = document.documentElement;
    const shopid = {{ shop.id }};
    try {
        const response = await fetch(`https://www.prodnotifyapi.skyvisionshopify.in/productnotifypurchasebar/color/${shopid}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            throw new Error('Network response was not ok in color');
        }

        const data = await response.json();
        const success = data.success;
        console.log(success)
        console.log(data.data[0])
        if (success === 1) {
            const bar=document.getElementById('bar')
            bar.style.background=data.data[0].bgColor
            const producttitle = document.getElementById('producttitle');
            const quantity = document.getElementById('quantity');
            const Price = document.getElementById('Price');
            const cartbtn=document.getElementsByClassName('cartbtn')
            const qtytext=document.getElementById('qtytext')
            const pricetext=document.getElementById('pricetext')

            producttitle.style.color = data.data[0].textColor;
            quantity.style.color = data.data[0].textColor;
            Price.style.color = data.data[0].textColor;
            bar.style.color = data.data[0].textColor;
            qtytext.style.color = data.data[0].textColor;
            pricetext.style.color = data.data[0].textColor;
           for (let i = 0; i < cartbtn.length; i++) {
                cartbtn[i].style.color = data.data[0].textColor;
            }
        } else {
          console.log("error in changing bgcolor and color")
        }
    } catch (error) {
        console.error('Error fetching in color:', error);
    } 
    try {
      const settingResponse = await fetch(`https://www.prodnotifyapi.skyvisionshopify.in/productnotifypurchasebar/getSetting/${shopid}`);
      if (settingResponse.ok) {
        const settingData = await settingResponse.json();
        const setting = settingData.data[0];
        console.log(setting)
        const proprice = document.getElementsByClassName('proprice')[0];
        const logo = document.getElementsByClassName('svimg')[0];
        const proname = document.getElementById('producttitle');
        const quantity = document.getElementsByClassName('proquantity')[0];
        const button = document.getElementsByClassName('cartbtn')[0];
        const bar = document.getElementById('bar');

        proprice.style.display = setting.price == 1 ? 'block' : 'none';
        logo.style.display = setting.logo == 1 ? 'block' : 'none';
        proname.style.display = setting.product_name == 1 ? 'block' : 'none';
        quantity.style.display = setting.quantity == 1 ? 'block' : 'none';
        button.style.display = setting.cart_button == 1 ? 'block' : 'none';
        bar.style.display = setting.popup_bar == 1 ? 'flex' : 'none';
      } else {
        throw new Error('Network response was not ok in setting');
      }
    } catch (error) {
      console.error('Error fetching in setting:', error);
    }
    const productid={{ product.id }}
    try
    {
      const productres= await fetch(`https://www.prodnotifyapi.skyvisionshopify.in/productnotifypurchasebar/${productid}`);
      if(productres.ok){
        const productData = await productres.json();
        const product = productData.success
        console.log("pro1",product)
        const bar= document.getElementById('bar')

        bar.style.display = product == 1 ? "flex" : "none";
      }
    }
    catch(error){
      console.log(error)
    }

  // function handleScroll() {
  //   var scrollTotal = rootElement.scrollHeight - rootElement.clientHeight;
  //   if (rootElement.scrollTop / scrollTotal > 0.5) {
  //     scrollToTopBtn.classList.add("showBtn");
  //   } else {
  //     scrollToTopBtn.classList.remove("showBtn");
  //   }
  // }
  // document.addEventListener("scroll", handleScroll);
});
</script>
